#!/usr/bin/env perl

use strict;
use DateTime;

use File::Spec::Functions qw(catfile);
use Getopt::Std qw(getopts);
use Act::Util qw(format_datetime_string);
use Act::Config;


my %opts;
getopts('anv', \%opts) or usage();
$opts{a} && @ARGV && usage();
$opts{v} = 1 if $opts{n};
$|++; 

my $now = DateTime->today;
my $home = $Config->home;
my @confs = @ARGV ? @ARGV : keys %{$Config->conferences};

for my $conf_id (@confs) {
    my $cfg = Act::Config::get_config($conf_id);
    my ($begin, $end) = map format_datetime_string($_)->truncate(to => 'day'),
                        $cfg->talks_start_date, $cfg->talks_end_date;
    $end->add(weeks => 1);

    if (@ARGV || $opts{a} || $end >= $now || $begin >= $now) {
        for my $subdir (qw(actdocs wwwdocs)) {
            my $dir = catfile($Config->home, $subdir, $conf_id);
            print "$dir\n" if $opts{v};

            unless ($opts{n}) {
                chdir $dir or do { warn "Can't chdir to $dir!\n"; return };
                my $status = system("svn up -q --non-interactive");
                warn "Fatal error when trying to run 'svn up' in $dir: $!\n"
                    if $status == -1;
            }
        }
    }
}

sub usage
{
    die <<EOF;
$0 [-nv]
$0 [-nv] [conf_id...]
$0 -a [-nv]

-a     update all conferences
-n     dry run
-v     verbose

EOF
}
